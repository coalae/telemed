/**
 * generated by Xtext 2.12.0.M1
 */
package ase.queryDsl.impl;

import ase.queryDsl.Delete;
import ase.queryDsl.DeleteMedicalRecord;
import ase.queryDsl.DeletePatientMonitoring;
import ase.queryDsl.DeletePrescription;
import ase.queryDsl.Drop;
import ase.queryDsl.Insert;
import ase.queryDsl.InsertMedicalRecord;
import ase.queryDsl.InsertPatientMonitoring;
import ase.queryDsl.InsertPrescription;
import ase.queryDsl.MedicalCondition;
import ase.queryDsl.Model;
import ase.queryDsl.QueryDslFactory;
import ase.queryDsl.QueryDslPackage;
import ase.queryDsl.QueryType;
import ase.queryDsl.RiskPerception;
import ase.queryDsl.Select;
import ase.queryDsl.SelectMedicalRecord;
import ase.queryDsl.SelectPatientMonitoring;
import ase.queryDsl.SelectPrescription;
import ase.queryDsl.TableName;
import ase.queryDsl.VariableMedicalRecord;
import ase.queryDsl.VariablePatientMonitoring;
import ase.queryDsl.VariablePrescription;
import ase.queryDsl.WhereMedicalRecord;
import ase.queryDsl.WherePatientMonitoring;
import ase.queryDsl.WherePrescription;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class QueryDslPackageImpl extends EPackageImpl implements QueryDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass queryTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectMedicalRecordEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectPatientMonitoringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectPrescriptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass insertEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass insertMedicalRecordEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass insertPatientMonitoringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass insertPrescriptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dropEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass deleteEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass deleteMedicalRecordEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass deletePatientMonitoringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass deletePrescriptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass whereMedicalRecordEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass wherePatientMonitoringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass wherePrescriptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum tableNameEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum variableMedicalRecordEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum variablePatientMonitoringEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum variablePrescriptionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum medicalConditionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum riskPerceptionEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see ase.queryDsl.QueryDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private QueryDslPackageImpl()
  {
    super(eNS_URI, QueryDslFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link QueryDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static QueryDslPackage init()
  {
    if (isInited) return (QueryDslPackage)EPackage.Registry.INSTANCE.getEPackage(QueryDslPackage.eNS_URI);

    // Obtain or create and register package
    QueryDslPackageImpl theQueryDslPackage = (QueryDslPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof QueryDslPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new QueryDslPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theQueryDslPackage.createPackageContents();

    // Initialize created meta-data
    theQueryDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theQueryDslPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(QueryDslPackage.eNS_URI, theQueryDslPackage);
    return theQueryDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_QueryType()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getQueryType()
  {
    return queryTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSelect()
  {
    return selectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSelectMedicalRecord()
  {
    return selectMedicalRecordEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSelectMedicalRecord_VariableMedicalRecord()
  {
    return (EAttribute)selectMedicalRecordEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSelectMedicalRecord_VariableMedicalRecordNext()
  {
    return (EAttribute)selectMedicalRecordEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSelectMedicalRecord_Where()
  {
    return (EReference)selectMedicalRecordEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSelectPatientMonitoring()
  {
    return selectPatientMonitoringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSelectPatientMonitoring_VariablePatientMonitoring()
  {
    return (EAttribute)selectPatientMonitoringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSelectPatientMonitoring_VariablePatientMonitoringNext()
  {
    return (EAttribute)selectPatientMonitoringEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSelectPatientMonitoring_Where()
  {
    return (EReference)selectPatientMonitoringEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSelectPrescription()
  {
    return selectPrescriptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSelectPrescription_VariablePrescription()
  {
    return (EAttribute)selectPrescriptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSelectPrescription_VariablePrescriptionNext()
  {
    return (EAttribute)selectPrescriptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSelectPrescription_Where()
  {
    return (EReference)selectPrescriptionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInsert()
  {
    return insertEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInsertMedicalRecord()
  {
    return insertMedicalRecordEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertMedicalRecord_RecordId()
  {
    return (EAttribute)insertMedicalRecordEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertMedicalRecord_PatientId()
  {
    return (EAttribute)insertMedicalRecordEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertMedicalRecord_DoctorId()
  {
    return (EAttribute)insertMedicalRecordEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertMedicalRecord_MedicalCondition()
  {
    return (EAttribute)insertMedicalRecordEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertMedicalRecord_Date()
  {
    return (EAttribute)insertMedicalRecordEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertMedicalRecord_Price()
  {
    return (EAttribute)insertMedicalRecordEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertMedicalRecord_Description()
  {
    return (EAttribute)insertMedicalRecordEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInsertPatientMonitoring()
  {
    return insertPatientMonitoringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPatientMonitoring_MonitoringId()
  {
    return (EAttribute)insertPatientMonitoringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPatientMonitoring_PatientId()
  {
    return (EAttribute)insertPatientMonitoringEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPatientMonitoring_Category()
  {
    return (EAttribute)insertPatientMonitoringEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPatientMonitoring_Date()
  {
    return (EAttribute)insertPatientMonitoringEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPatientMonitoring_RiskPerception()
  {
    return (EAttribute)insertPatientMonitoringEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPatientMonitoring_Treadted()
  {
    return (EAttribute)insertPatientMonitoringEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPatientMonitoring_DeviceId()
  {
    return (EAttribute)insertPatientMonitoringEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInsertPrescription()
  {
    return insertPrescriptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPrescription_PrescriptionId()
  {
    return (EAttribute)insertPrescriptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPrescription_RecordId()
  {
    return (EAttribute)insertPrescriptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPrescription_MedicationName()
  {
    return (EAttribute)insertPrescriptionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPrescription_Start()
  {
    return (EAttribute)insertPrescriptionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPrescription_End()
  {
    return (EAttribute)insertPrescriptionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPrescription_Ordered()
  {
    return (EAttribute)insertPrescriptionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInsertPrescription_Price()
  {
    return (EAttribute)insertPrescriptionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDrop()
  {
    return dropEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDrop_Table_name()
  {
    return (EAttribute)dropEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDelete()
  {
    return deleteEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDeleteMedicalRecord()
  {
    return deleteMedicalRecordEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDeleteMedicalRecord_WhereMedicalRecord()
  {
    return (EReference)deleteMedicalRecordEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDeletePatientMonitoring()
  {
    return deletePatientMonitoringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDeletePatientMonitoring_WherepatientMonitoring()
  {
    return (EReference)deletePatientMonitoringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDeletePrescription()
  {
    return deletePrescriptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDeletePrescription_Whereprescription()
  {
    return (EReference)deletePrescriptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getWhereMedicalRecord()
  {
    return whereMedicalRecordEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWhereMedicalRecord_RecordId()
  {
    return (EAttribute)whereMedicalRecordEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWhereMedicalRecord_PatientId()
  {
    return (EAttribute)whereMedicalRecordEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWhereMedicalRecord_DoctorId()
  {
    return (EAttribute)whereMedicalRecordEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWhereMedicalRecord_MedicalCondition()
  {
    return (EAttribute)whereMedicalRecordEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWhereMedicalRecord_Date()
  {
    return (EAttribute)whereMedicalRecordEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWhereMedicalRecord_Price()
  {
    return (EAttribute)whereMedicalRecordEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWhereMedicalRecord_Description()
  {
    return (EAttribute)whereMedicalRecordEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getWherePatientMonitoring()
  {
    return wherePatientMonitoringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePatientMonitoring_MonitoringId()
  {
    return (EAttribute)wherePatientMonitoringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePatientMonitoring_PatientId()
  {
    return (EAttribute)wherePatientMonitoringEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePatientMonitoring_Category()
  {
    return (EAttribute)wherePatientMonitoringEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePatientMonitoring_Date()
  {
    return (EAttribute)wherePatientMonitoringEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePatientMonitoring_Riskperception()
  {
    return (EAttribute)wherePatientMonitoringEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePatientMonitoring_Treated()
  {
    return (EAttribute)wherePatientMonitoringEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePatientMonitoring_DeviceId()
  {
    return (EAttribute)wherePatientMonitoringEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getWherePrescription()
  {
    return wherePrescriptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePrescription_PrescriptionId()
  {
    return (EAttribute)wherePrescriptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePrescription_RecordId()
  {
    return (EAttribute)wherePrescriptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePrescription_MedicationName()
  {
    return (EAttribute)wherePrescriptionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePrescription_Start()
  {
    return (EAttribute)wherePrescriptionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePrescription_End()
  {
    return (EAttribute)wherePrescriptionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePrescription_Ordered()
  {
    return (EAttribute)wherePrescriptionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWherePrescription_Price()
  {
    return (EAttribute)wherePrescriptionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getTableName()
  {
    return tableNameEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getVariableMedicalRecord()
  {
    return variableMedicalRecordEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getVariablePatientMonitoring()
  {
    return variablePatientMonitoringEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getVariablePrescription()
  {
    return variablePrescriptionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getMedicalCondition()
  {
    return medicalConditionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getRiskPerception()
  {
    return riskPerceptionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public QueryDslFactory getQueryDslFactory()
  {
    return (QueryDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__QUERY_TYPE);

    queryTypeEClass = createEClass(QUERY_TYPE);

    selectEClass = createEClass(SELECT);

    selectMedicalRecordEClass = createEClass(SELECT_MEDICAL_RECORD);
    createEAttribute(selectMedicalRecordEClass, SELECT_MEDICAL_RECORD__VARIABLE_MEDICAL_RECORD);
    createEAttribute(selectMedicalRecordEClass, SELECT_MEDICAL_RECORD__VARIABLE_MEDICAL_RECORD_NEXT);
    createEReference(selectMedicalRecordEClass, SELECT_MEDICAL_RECORD__WHERE);

    selectPatientMonitoringEClass = createEClass(SELECT_PATIENT_MONITORING);
    createEAttribute(selectPatientMonitoringEClass, SELECT_PATIENT_MONITORING__VARIABLE_PATIENT_MONITORING);
    createEAttribute(selectPatientMonitoringEClass, SELECT_PATIENT_MONITORING__VARIABLE_PATIENT_MONITORING_NEXT);
    createEReference(selectPatientMonitoringEClass, SELECT_PATIENT_MONITORING__WHERE);

    selectPrescriptionEClass = createEClass(SELECT_PRESCRIPTION);
    createEAttribute(selectPrescriptionEClass, SELECT_PRESCRIPTION__VARIABLE_PRESCRIPTION);
    createEAttribute(selectPrescriptionEClass, SELECT_PRESCRIPTION__VARIABLE_PRESCRIPTION_NEXT);
    createEReference(selectPrescriptionEClass, SELECT_PRESCRIPTION__WHERE);

    insertEClass = createEClass(INSERT);

    insertMedicalRecordEClass = createEClass(INSERT_MEDICAL_RECORD);
    createEAttribute(insertMedicalRecordEClass, INSERT_MEDICAL_RECORD__RECORD_ID);
    createEAttribute(insertMedicalRecordEClass, INSERT_MEDICAL_RECORD__PATIENT_ID);
    createEAttribute(insertMedicalRecordEClass, INSERT_MEDICAL_RECORD__DOCTOR_ID);
    createEAttribute(insertMedicalRecordEClass, INSERT_MEDICAL_RECORD__MEDICAL_CONDITION);
    createEAttribute(insertMedicalRecordEClass, INSERT_MEDICAL_RECORD__DATE);
    createEAttribute(insertMedicalRecordEClass, INSERT_MEDICAL_RECORD__PRICE);
    createEAttribute(insertMedicalRecordEClass, INSERT_MEDICAL_RECORD__DESCRIPTION);

    insertPatientMonitoringEClass = createEClass(INSERT_PATIENT_MONITORING);
    createEAttribute(insertPatientMonitoringEClass, INSERT_PATIENT_MONITORING__MONITORING_ID);
    createEAttribute(insertPatientMonitoringEClass, INSERT_PATIENT_MONITORING__PATIENT_ID);
    createEAttribute(insertPatientMonitoringEClass, INSERT_PATIENT_MONITORING__CATEGORY);
    createEAttribute(insertPatientMonitoringEClass, INSERT_PATIENT_MONITORING__DATE);
    createEAttribute(insertPatientMonitoringEClass, INSERT_PATIENT_MONITORING__RISK_PERCEPTION);
    createEAttribute(insertPatientMonitoringEClass, INSERT_PATIENT_MONITORING__TREADTED);
    createEAttribute(insertPatientMonitoringEClass, INSERT_PATIENT_MONITORING__DEVICE_ID);

    insertPrescriptionEClass = createEClass(INSERT_PRESCRIPTION);
    createEAttribute(insertPrescriptionEClass, INSERT_PRESCRIPTION__PRESCRIPTION_ID);
    createEAttribute(insertPrescriptionEClass, INSERT_PRESCRIPTION__RECORD_ID);
    createEAttribute(insertPrescriptionEClass, INSERT_PRESCRIPTION__MEDICATION_NAME);
    createEAttribute(insertPrescriptionEClass, INSERT_PRESCRIPTION__START);
    createEAttribute(insertPrescriptionEClass, INSERT_PRESCRIPTION__END);
    createEAttribute(insertPrescriptionEClass, INSERT_PRESCRIPTION__ORDERED);
    createEAttribute(insertPrescriptionEClass, INSERT_PRESCRIPTION__PRICE);

    dropEClass = createEClass(DROP);
    createEAttribute(dropEClass, DROP__TABLE_NAME);

    deleteEClass = createEClass(DELETE);

    deleteMedicalRecordEClass = createEClass(DELETE_MEDICAL_RECORD);
    createEReference(deleteMedicalRecordEClass, DELETE_MEDICAL_RECORD__WHERE_MEDICAL_RECORD);

    deletePatientMonitoringEClass = createEClass(DELETE_PATIENT_MONITORING);
    createEReference(deletePatientMonitoringEClass, DELETE_PATIENT_MONITORING__WHEREPATIENT_MONITORING);

    deletePrescriptionEClass = createEClass(DELETE_PRESCRIPTION);
    createEReference(deletePrescriptionEClass, DELETE_PRESCRIPTION__WHEREPRESCRIPTION);

    whereMedicalRecordEClass = createEClass(WHERE_MEDICAL_RECORD);
    createEAttribute(whereMedicalRecordEClass, WHERE_MEDICAL_RECORD__RECORD_ID);
    createEAttribute(whereMedicalRecordEClass, WHERE_MEDICAL_RECORD__PATIENT_ID);
    createEAttribute(whereMedicalRecordEClass, WHERE_MEDICAL_RECORD__DOCTOR_ID);
    createEAttribute(whereMedicalRecordEClass, WHERE_MEDICAL_RECORD__MEDICAL_CONDITION);
    createEAttribute(whereMedicalRecordEClass, WHERE_MEDICAL_RECORD__DATE);
    createEAttribute(whereMedicalRecordEClass, WHERE_MEDICAL_RECORD__PRICE);
    createEAttribute(whereMedicalRecordEClass, WHERE_MEDICAL_RECORD__DESCRIPTION);

    wherePatientMonitoringEClass = createEClass(WHERE_PATIENT_MONITORING);
    createEAttribute(wherePatientMonitoringEClass, WHERE_PATIENT_MONITORING__MONITORING_ID);
    createEAttribute(wherePatientMonitoringEClass, WHERE_PATIENT_MONITORING__PATIENT_ID);
    createEAttribute(wherePatientMonitoringEClass, WHERE_PATIENT_MONITORING__CATEGORY);
    createEAttribute(wherePatientMonitoringEClass, WHERE_PATIENT_MONITORING__DATE);
    createEAttribute(wherePatientMonitoringEClass, WHERE_PATIENT_MONITORING__RISKPERCEPTION);
    createEAttribute(wherePatientMonitoringEClass, WHERE_PATIENT_MONITORING__TREATED);
    createEAttribute(wherePatientMonitoringEClass, WHERE_PATIENT_MONITORING__DEVICE_ID);

    wherePrescriptionEClass = createEClass(WHERE_PRESCRIPTION);
    createEAttribute(wherePrescriptionEClass, WHERE_PRESCRIPTION__PRESCRIPTION_ID);
    createEAttribute(wherePrescriptionEClass, WHERE_PRESCRIPTION__RECORD_ID);
    createEAttribute(wherePrescriptionEClass, WHERE_PRESCRIPTION__MEDICATION_NAME);
    createEAttribute(wherePrescriptionEClass, WHERE_PRESCRIPTION__START);
    createEAttribute(wherePrescriptionEClass, WHERE_PRESCRIPTION__END);
    createEAttribute(wherePrescriptionEClass, WHERE_PRESCRIPTION__ORDERED);
    createEAttribute(wherePrescriptionEClass, WHERE_PRESCRIPTION__PRICE);

    // Create enums
    tableNameEEnum = createEEnum(TABLE_NAME);
    variableMedicalRecordEEnum = createEEnum(VARIABLE_MEDICAL_RECORD);
    variablePatientMonitoringEEnum = createEEnum(VARIABLE_PATIENT_MONITORING);
    variablePrescriptionEEnum = createEEnum(VARIABLE_PRESCRIPTION);
    medicalConditionEEnum = createEEnum(MEDICAL_CONDITION);
    riskPerceptionEEnum = createEEnum(RISK_PERCEPTION);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    selectEClass.getESuperTypes().add(this.getQueryType());
    selectMedicalRecordEClass.getESuperTypes().add(this.getSelect());
    selectPatientMonitoringEClass.getESuperTypes().add(this.getSelect());
    selectPrescriptionEClass.getESuperTypes().add(this.getSelect());
    insertEClass.getESuperTypes().add(this.getQueryType());
    insertMedicalRecordEClass.getESuperTypes().add(this.getInsert());
    insertPatientMonitoringEClass.getESuperTypes().add(this.getInsert());
    insertPrescriptionEClass.getESuperTypes().add(this.getInsert());
    dropEClass.getESuperTypes().add(this.getQueryType());
    deleteEClass.getESuperTypes().add(this.getQueryType());
    deleteMedicalRecordEClass.getESuperTypes().add(this.getDelete());
    deletePatientMonitoringEClass.getESuperTypes().add(this.getDelete());
    deletePrescriptionEClass.getESuperTypes().add(this.getDelete());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_QueryType(), this.getQueryType(), null, "queryType", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(queryTypeEClass, QueryType.class, "QueryType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(selectEClass, Select.class, "Select", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(selectMedicalRecordEClass, SelectMedicalRecord.class, "SelectMedicalRecord", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSelectMedicalRecord_VariableMedicalRecord(), this.getVariableMedicalRecord(), "variableMedicalRecord", null, 0, -1, SelectMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSelectMedicalRecord_VariableMedicalRecordNext(), this.getVariableMedicalRecord(), "variableMedicalRecordNext", null, 0, -1, SelectMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectMedicalRecord_Where(), this.getWhereMedicalRecord(), null, "where", null, 0, -1, SelectMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectPatientMonitoringEClass, SelectPatientMonitoring.class, "SelectPatientMonitoring", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSelectPatientMonitoring_VariablePatientMonitoring(), this.getVariablePatientMonitoring(), "variablePatientMonitoring", null, 0, 1, SelectPatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSelectPatientMonitoring_VariablePatientMonitoringNext(), this.getVariablePatientMonitoring(), "variablePatientMonitoringNext", null, 0, -1, SelectPatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectPatientMonitoring_Where(), this.getWherePatientMonitoring(), null, "where", null, 0, -1, SelectPatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectPrescriptionEClass, SelectPrescription.class, "SelectPrescription", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSelectPrescription_VariablePrescription(), this.getVariablePrescription(), "variablePrescription", null, 0, 1, SelectPrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSelectPrescription_VariablePrescriptionNext(), this.getVariablePrescription(), "variablePrescriptionNext", null, 0, -1, SelectPrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectPrescription_Where(), this.getWherePrescription(), null, "where", null, 0, -1, SelectPrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(insertEClass, Insert.class, "Insert", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(insertMedicalRecordEClass, InsertMedicalRecord.class, "InsertMedicalRecord", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInsertMedicalRecord_RecordId(), ecorePackage.getEInt(), "recordId", null, 0, 1, InsertMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertMedicalRecord_PatientId(), ecorePackage.getEInt(), "patientId", null, 0, 1, InsertMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertMedicalRecord_DoctorId(), ecorePackage.getEInt(), "doctorId", null, 0, 1, InsertMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertMedicalRecord_MedicalCondition(), this.getMedicalCondition(), "medicalCondition", null, 0, 1, InsertMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertMedicalRecord_Date(), ecorePackage.getEString(), "date", null, 0, 1, InsertMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertMedicalRecord_Price(), ecorePackage.getEString(), "price", null, 0, 1, InsertMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertMedicalRecord_Description(), ecorePackage.getEString(), "description", null, 0, 1, InsertMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(insertPatientMonitoringEClass, InsertPatientMonitoring.class, "InsertPatientMonitoring", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInsertPatientMonitoring_MonitoringId(), ecorePackage.getEInt(), "monitoringId", null, 0, 1, InsertPatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertPatientMonitoring_PatientId(), ecorePackage.getEInt(), "patientId", null, 0, 1, InsertPatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertPatientMonitoring_Category(), this.getMedicalCondition(), "category", null, 0, 1, InsertPatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertPatientMonitoring_Date(), ecorePackage.getEString(), "date", null, 0, 1, InsertPatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertPatientMonitoring_RiskPerception(), this.getRiskPerception(), "riskPerception", null, 0, 1, InsertPatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertPatientMonitoring_Treadted(), ecorePackage.getEString(), "treadted", null, 0, 1, InsertPatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertPatientMonitoring_DeviceId(), ecorePackage.getEInt(), "deviceId", null, 0, 1, InsertPatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(insertPrescriptionEClass, InsertPrescription.class, "InsertPrescription", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInsertPrescription_PrescriptionId(), ecorePackage.getEInt(), "prescriptionId", null, 0, 1, InsertPrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertPrescription_RecordId(), ecorePackage.getEInt(), "recordId", null, 0, 1, InsertPrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertPrescription_MedicationName(), ecorePackage.getEString(), "medicationName", null, 0, 1, InsertPrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertPrescription_Start(), ecorePackage.getEString(), "start", null, 0, 1, InsertPrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertPrescription_End(), ecorePackage.getEString(), "end", null, 0, 1, InsertPrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertPrescription_Ordered(), ecorePackage.getEString(), "ordered", null, 0, 1, InsertPrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInsertPrescription_Price(), ecorePackage.getEString(), "price", null, 0, 1, InsertPrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dropEClass, Drop.class, "Drop", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDrop_Table_name(), this.getTableName(), "table_name", null, 0, -1, Drop.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(deleteEClass, Delete.class, "Delete", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(deleteMedicalRecordEClass, DeleteMedicalRecord.class, "DeleteMedicalRecord", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDeleteMedicalRecord_WhereMedicalRecord(), this.getWhereMedicalRecord(), null, "whereMedicalRecord", null, 0, -1, DeleteMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(deletePatientMonitoringEClass, DeletePatientMonitoring.class, "DeletePatientMonitoring", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDeletePatientMonitoring_WherepatientMonitoring(), this.getWherePatientMonitoring(), null, "wherepatientMonitoring", null, 0, -1, DeletePatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(deletePrescriptionEClass, DeletePrescription.class, "DeletePrescription", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDeletePrescription_Whereprescription(), this.getWherePrescription(), null, "whereprescription", null, 0, -1, DeletePrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(whereMedicalRecordEClass, WhereMedicalRecord.class, "WhereMedicalRecord", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWhereMedicalRecord_RecordId(), ecorePackage.getEInt(), "recordId", null, 0, -1, WhereMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWhereMedicalRecord_PatientId(), ecorePackage.getEInt(), "patientId", null, 0, -1, WhereMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWhereMedicalRecord_DoctorId(), ecorePackage.getEInt(), "doctorId", null, 0, -1, WhereMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWhereMedicalRecord_MedicalCondition(), this.getMedicalCondition(), "medicalCondition", null, 0, -1, WhereMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWhereMedicalRecord_Date(), ecorePackage.getEString(), "date", null, 0, -1, WhereMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWhereMedicalRecord_Price(), ecorePackage.getEString(), "price", null, 0, -1, WhereMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWhereMedicalRecord_Description(), ecorePackage.getEString(), "description", null, 0, -1, WhereMedicalRecord.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(wherePatientMonitoringEClass, WherePatientMonitoring.class, "WherePatientMonitoring", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWherePatientMonitoring_MonitoringId(), ecorePackage.getEInt(), "monitoringId", null, 0, -1, WherePatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWherePatientMonitoring_PatientId(), ecorePackage.getEInt(), "patientId", null, 0, -1, WherePatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWherePatientMonitoring_Category(), this.getMedicalCondition(), "category", null, 0, -1, WherePatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWherePatientMonitoring_Date(), ecorePackage.getEString(), "date", null, 0, -1, WherePatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWherePatientMonitoring_Riskperception(), this.getRiskPerception(), "riskperception", null, 0, -1, WherePatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWherePatientMonitoring_Treated(), ecorePackage.getEString(), "treated", null, 0, -1, WherePatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWherePatientMonitoring_DeviceId(), ecorePackage.getEInt(), "deviceId", null, 0, -1, WherePatientMonitoring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(wherePrescriptionEClass, WherePrescription.class, "WherePrescription", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWherePrescription_PrescriptionId(), ecorePackage.getEInt(), "prescriptionId", null, 0, -1, WherePrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWherePrescription_RecordId(), ecorePackage.getEInt(), "recordId", null, 0, -1, WherePrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWherePrescription_MedicationName(), ecorePackage.getEString(), "medicationName", null, 0, -1, WherePrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWherePrescription_Start(), ecorePackage.getEString(), "start", null, 0, -1, WherePrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWherePrescription_End(), ecorePackage.getEString(), "end", null, 0, -1, WherePrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWherePrescription_Ordered(), ecorePackage.getEString(), "ordered", null, 0, -1, WherePrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWherePrescription_Price(), ecorePackage.getEString(), "price", null, 0, -1, WherePrescription.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(tableNameEEnum, TableName.class, "TableName");
    addEEnumLiteral(tableNameEEnum, TableName.MEDICAL_RECORD);
    addEEnumLiteral(tableNameEEnum, TableName.PATIENT_MONITORING);
    addEEnumLiteral(tableNameEEnum, TableName.PRESCRIPTION);

    initEEnum(variableMedicalRecordEEnum, VariableMedicalRecord.class, "VariableMedicalRecord");
    addEEnumLiteral(variableMedicalRecordEEnum, VariableMedicalRecord.RECORD_ID);
    addEEnumLiteral(variableMedicalRecordEEnum, VariableMedicalRecord.PATIENT_ID);
    addEEnumLiteral(variableMedicalRecordEEnum, VariableMedicalRecord.DOCTOR_ID);
    addEEnumLiteral(variableMedicalRecordEEnum, VariableMedicalRecord.MEDICAL_CONDITION);
    addEEnumLiteral(variableMedicalRecordEEnum, VariableMedicalRecord.DATE);
    addEEnumLiteral(variableMedicalRecordEEnum, VariableMedicalRecord.PRICE);
    addEEnumLiteral(variableMedicalRecordEEnum, VariableMedicalRecord.DESCRIPTION);

    initEEnum(variablePatientMonitoringEEnum, VariablePatientMonitoring.class, "VariablePatientMonitoring");
    addEEnumLiteral(variablePatientMonitoringEEnum, VariablePatientMonitoring.MONITORING_ID);
    addEEnumLiteral(variablePatientMonitoringEEnum, VariablePatientMonitoring.PATIENT_ID);
    addEEnumLiteral(variablePatientMonitoringEEnum, VariablePatientMonitoring.CATEGORY);
    addEEnumLiteral(variablePatientMonitoringEEnum, VariablePatientMonitoring.DATE);
    addEEnumLiteral(variablePatientMonitoringEEnum, VariablePatientMonitoring.RISK_PERCEPTION);
    addEEnumLiteral(variablePatientMonitoringEEnum, VariablePatientMonitoring.TREATED);
    addEEnumLiteral(variablePatientMonitoringEEnum, VariablePatientMonitoring.DEVICE_ID);

    initEEnum(variablePrescriptionEEnum, VariablePrescription.class, "VariablePrescription");
    addEEnumLiteral(variablePrescriptionEEnum, VariablePrescription.PRESCRIPTION_ID);
    addEEnumLiteral(variablePrescriptionEEnum, VariablePrescription.RECORD_ID);
    addEEnumLiteral(variablePrescriptionEEnum, VariablePrescription.MEDICATION_NAME);
    addEEnumLiteral(variablePrescriptionEEnum, VariablePrescription.START);
    addEEnumLiteral(variablePrescriptionEEnum, VariablePrescription.END);
    addEEnumLiteral(variablePrescriptionEEnum, VariablePrescription.ORDERED);
    addEEnumLiteral(variablePrescriptionEEnum, VariablePrescription.PRICE);

    initEEnum(medicalConditionEEnum, MedicalCondition.class, "MedicalCondition");
    addEEnumLiteral(medicalConditionEEnum, MedicalCondition.BRONCHITIS);
    addEEnumLiteral(medicalConditionEEnum, MedicalCondition.ASTHMA);
    addEEnumLiteral(medicalConditionEEnum, MedicalCondition.DIABETES);
    addEEnumLiteral(medicalConditionEEnum, MedicalCondition.FLU);
    addEEnumLiteral(medicalConditionEEnum, MedicalCondition.HYPERTENSION);

    initEEnum(riskPerceptionEEnum, RiskPerception.class, "RiskPerception");
    addEEnumLiteral(riskPerceptionEEnum, RiskPerception.HIGH);
    addEEnumLiteral(riskPerceptionEEnum, RiskPerception.MEDIUM);
    addEEnumLiteral(riskPerceptionEEnum, RiskPerception.LOW);

    // Create resource
    createResource(eNS_URI);
  }

} //QueryDslPackageImpl
