/*
 * generated by Xtext 2.12.0.M1
 */
grammar InternalQueryDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ase.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ase.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ase.services.QueryDslGrammarAccess;

}

@parser::members {

 	private QueryDslGrammarAccess grammarAccess;

    public InternalQueryDslParser(TokenStream input, QueryDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected QueryDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getQueryTypeQueryTypeParserRuleCall_0());
			}
			lv_queryType_0_0=ruleQueryType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"queryType",
					lv_queryType_0_0,
					"ase.QueryDsl.QueryType");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleQueryType
entryRuleQueryType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryTypeRule()); }
	iv_ruleQueryType=ruleQueryType
	{ $current=$iv_ruleQueryType.current; }
	EOF;

// Rule QueryType
ruleQueryType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQueryTypeAccess().getSelectParserRuleCall_0());
		}
		this_Select_0=ruleSelect
		{
			$current = $this_Select_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryTypeAccess().getInsertParserRuleCall_1());
		}
		this_Insert_1=ruleInsert
		{
			$current = $this_Insert_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryTypeAccess().getDropParserRuleCall_2());
		}
		this_Drop_2=ruleDrop
		{
			$current = $this_Drop_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryTypeAccess().getDeleteParserRuleCall_3());
		}
		this_Delete_3=ruleDelete
		{
			$current = $this_Delete_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSelect
entryRuleSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectRule()); }
	iv_ruleSelect=ruleSelect
	{ $current=$iv_ruleSelect.current; }
	EOF;

// Rule Select
ruleSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SELECT'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectAccess().getSELECTKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getSelectAccess().getSelectMedicalRecordParserRuleCall_1_0());
			}
			this_SelectMedicalRecord_1=ruleSelectMedicalRecord
			{
				$current = $this_SelectMedicalRecord_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getSelectAccess().getSelectPatientMonitoringParserRuleCall_1_1());
			}
			this_SelectPatientMonitoring_2=ruleSelectPatientMonitoring
			{
				$current = $this_SelectPatientMonitoring_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getSelectAccess().getSelectPrescriptionParserRuleCall_1_2());
			}
			this_SelectPrescription_3=ruleSelectPrescription
			{
				$current = $this_SelectPrescription_3.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSelectMedicalRecord
entryRuleSelectMedicalRecord returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectMedicalRecordRule()); }
	iv_ruleSelectMedicalRecord=ruleSelectMedicalRecord
	{ $current=$iv_ruleSelectMedicalRecord.current; }
	EOF;

// Rule SelectMedicalRecord
ruleSelectMedicalRecord returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectMedicalRecordAccess().getVariableMedicalRecordVariableMedicalRecordEnumRuleCall_0_0());
				}
				lv_variableMedicalRecord_0_0=ruleVariableMedicalRecord
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectMedicalRecordRule());
					}
					add(
						$current,
						"variableMedicalRecord",
						lv_variableMedicalRecord_0_0,
						"ase.QueryDsl.VariableMedicalRecord");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getSelectMedicalRecordAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectMedicalRecordAccess().getVariableMedicalRecordNextVariableMedicalRecordEnumRuleCall_1_1_0());
					}
					lv_variableMedicalRecordNext_2_0=ruleVariableMedicalRecord
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectMedicalRecordRule());
						}
						add(
							$current,
							"variableMedicalRecordNext",
							lv_variableMedicalRecordNext_2_0,
							"ase.QueryDsl.VariableMedicalRecord");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_3='From'
		{
			newLeafNode(otherlv_3, grammarAccess.getSelectMedicalRecordAccess().getFromKeyword_2());
		}
		otherlv_4='MedicalRecord'
		{
			newLeafNode(otherlv_4, grammarAccess.getSelectMedicalRecordAccess().getMedicalRecordKeyword_3());
		}
		(
			otherlv_5='WHERE'
			{
				newLeafNode(otherlv_5, grammarAccess.getSelectMedicalRecordAccess().getWHEREKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectMedicalRecordAccess().getWhereWhereMedicalRecordParserRuleCall_4_1_0());
					}
					lv_where_6_0=ruleWhereMedicalRecord
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectMedicalRecordRule());
						}
						add(
							$current,
							"where",
							lv_where_6_0,
							"ase.QueryDsl.WhereMedicalRecord");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getSelectMedicalRecordAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleSelectPatientMonitoring
entryRuleSelectPatientMonitoring returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectPatientMonitoringRule()); }
	iv_ruleSelectPatientMonitoring=ruleSelectPatientMonitoring
	{ $current=$iv_ruleSelectPatientMonitoring.current; }
	EOF;

// Rule SelectPatientMonitoring
ruleSelectPatientMonitoring returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectPatientMonitoringAccess().getVariablePatientMonitoringVariablePatientMonitoringEnumRuleCall_0_0());
				}
				lv_variablePatientMonitoring_0_0=ruleVariablePatientMonitoring
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectPatientMonitoringRule());
					}
					set(
						$current,
						"variablePatientMonitoring",
						lv_variablePatientMonitoring_0_0,
						"ase.QueryDsl.VariablePatientMonitoring");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getSelectPatientMonitoringAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectPatientMonitoringAccess().getVariablePatientMonitoringNextVariablePatientMonitoringEnumRuleCall_1_1_0());
					}
					lv_variablePatientMonitoringNext_2_0=ruleVariablePatientMonitoring
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectPatientMonitoringRule());
						}
						add(
							$current,
							"variablePatientMonitoringNext",
							lv_variablePatientMonitoringNext_2_0,
							"ase.QueryDsl.VariablePatientMonitoring");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_3='From'
		{
			newLeafNode(otherlv_3, grammarAccess.getSelectPatientMonitoringAccess().getFromKeyword_2());
		}
		otherlv_4='PatientMonitoring'
		{
			newLeafNode(otherlv_4, grammarAccess.getSelectPatientMonitoringAccess().getPatientMonitoringKeyword_3());
		}
		(
			otherlv_5='WHERE'
			{
				newLeafNode(otherlv_5, grammarAccess.getSelectPatientMonitoringAccess().getWHEREKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectPatientMonitoringAccess().getWhereWherePatientMonitoringParserRuleCall_4_1_0());
					}
					lv_where_6_0=ruleWherePatientMonitoring
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectPatientMonitoringRule());
						}
						add(
							$current,
							"where",
							lv_where_6_0,
							"ase.QueryDsl.WherePatientMonitoring");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getSelectPatientMonitoringAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleSelectPrescription
entryRuleSelectPrescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectPrescriptionRule()); }
	iv_ruleSelectPrescription=ruleSelectPrescription
	{ $current=$iv_ruleSelectPrescription.current; }
	EOF;

// Rule SelectPrescription
ruleSelectPrescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectPrescriptionAccess().getVariablePrescriptionVariablePrescriptionEnumRuleCall_0_0());
				}
				lv_variablePrescription_0_0=ruleVariablePrescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectPrescriptionRule());
					}
					set(
						$current,
						"variablePrescription",
						lv_variablePrescription_0_0,
						"ase.QueryDsl.VariablePrescription");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getSelectPrescriptionAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectPrescriptionAccess().getVariablePrescriptionNextVariablePrescriptionEnumRuleCall_1_1_0());
					}
					lv_variablePrescriptionNext_2_0=ruleVariablePrescription
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectPrescriptionRule());
						}
						add(
							$current,
							"variablePrescriptionNext",
							lv_variablePrescriptionNext_2_0,
							"ase.QueryDsl.VariablePrescription");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_3='From'
		{
			newLeafNode(otherlv_3, grammarAccess.getSelectPrescriptionAccess().getFromKeyword_2());
		}
		otherlv_4='Prescription'
		{
			newLeafNode(otherlv_4, grammarAccess.getSelectPrescriptionAccess().getPrescriptionKeyword_3());
		}
		(
			otherlv_5='WHERE'
			{
				newLeafNode(otherlv_5, grammarAccess.getSelectPrescriptionAccess().getWHEREKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectPrescriptionAccess().getWhereWherePrescriptionParserRuleCall_4_1_0());
					}
					lv_where_6_0=ruleWherePrescription
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectPrescriptionRule());
						}
						add(
							$current,
							"where",
							lv_where_6_0,
							"ase.QueryDsl.WherePrescription");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getSelectPrescriptionAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleInsert
entryRuleInsert returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertRule()); }
	iv_ruleInsert=ruleInsert
	{ $current=$iv_ruleInsert.current; }
	EOF;

// Rule Insert
ruleInsert returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='INSERT'
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertAccess().getINSERTKeyword_0());
		}
		otherlv_1='INTO'
		{
			newLeafNode(otherlv_1, grammarAccess.getInsertAccess().getINTOKeyword_1());
		}
		(
			{
				newCompositeNode(grammarAccess.getInsertAccess().getInsertMedicalRecordParserRuleCall_2_0());
			}
			this_InsertMedicalRecord_2=ruleInsertMedicalRecord
			{
				$current = $this_InsertMedicalRecord_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInsertAccess().getInsertPatientMonitoringParserRuleCall_2_1());
			}
			this_InsertPatientMonitoring_3=ruleInsertPatientMonitoring
			{
				$current = $this_InsertPatientMonitoring_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInsertAccess().getInsertPrescriptionParserRuleCall_2_2());
			}
			this_InsertPrescription_4=ruleInsertPrescription
			{
				$current = $this_InsertPrescription_4.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleInsertMedicalRecord
entryRuleInsertMedicalRecord returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertMedicalRecordRule()); }
	iv_ruleInsertMedicalRecord=ruleInsertMedicalRecord
	{ $current=$iv_ruleInsertMedicalRecord.current; }
	EOF;

// Rule InsertMedicalRecord
ruleInsertMedicalRecord returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MedicalRecord'
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertMedicalRecordAccess().getMedicalRecordKeyword_0());
		}
		otherlv_1='Values('
		{
			newLeafNode(otherlv_1, grammarAccess.getInsertMedicalRecordAccess().getValuesKeyword_1());
		}
		(
			(
				lv_recordId_2_0=RULE_INT
				{
					newLeafNode(lv_recordId_2_0, grammarAccess.getInsertMedicalRecordAccess().getRecordIdINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertMedicalRecordRule());
					}
					setWithLastConsumed(
						$current,
						"recordId",
						lv_recordId_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getInsertMedicalRecordAccess().getCommaKeyword_3());
		}
		(
			(
				lv_patientId_4_0=RULE_INT
				{
					newLeafNode(lv_patientId_4_0, grammarAccess.getInsertMedicalRecordAccess().getPatientIdINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertMedicalRecordRule());
					}
					setWithLastConsumed(
						$current,
						"patientId",
						lv_patientId_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getInsertMedicalRecordAccess().getCommaKeyword_5());
		}
		(
			(
				lv_doctorId_6_0=RULE_INT
				{
					newLeafNode(lv_doctorId_6_0, grammarAccess.getInsertMedicalRecordAccess().getDoctorIdINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertMedicalRecordRule());
					}
					setWithLastConsumed(
						$current,
						"doctorId",
						lv_doctorId_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getInsertMedicalRecordAccess().getCommaKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertMedicalRecordAccess().getMedicalConditionMedicalConditionEnumRuleCall_8_0());
				}
				lv_medicalCondition_8_0=ruleMedicalCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertMedicalRecordRule());
					}
					set(
						$current,
						"medicalCondition",
						lv_medicalCondition_8_0,
						"ase.QueryDsl.MedicalCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getInsertMedicalRecordAccess().getCommaKeyword_9());
		}
		(
			(
				lv_date_10_0=RULE_DATE
				{
					newLeafNode(lv_date_10_0, grammarAccess.getInsertMedicalRecordAccess().getDateDATETerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertMedicalRecordRule());
					}
					setWithLastConsumed(
						$current,
						"date",
						lv_date_10_0,
						"ase.QueryDsl.DATE");
				}
			)
		)
		otherlv_11=','
		{
			newLeafNode(otherlv_11, grammarAccess.getInsertMedicalRecordAccess().getCommaKeyword_11());
		}
		(
			(
				lv_price_12_0=RULE_DOUBLE
				{
					newLeafNode(lv_price_12_0, grammarAccess.getInsertMedicalRecordAccess().getPriceDOUBLETerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertMedicalRecordRule());
					}
					setWithLastConsumed(
						$current,
						"price",
						lv_price_12_0,
						"ase.QueryDsl.DOUBLE");
				}
			)
		)
		otherlv_13=','
		{
			newLeafNode(otherlv_13, grammarAccess.getInsertMedicalRecordAccess().getCommaKeyword_13());
		}
		(
			(
				lv_description_14_0=RULE_STRING
				{
					newLeafNode(lv_description_14_0, grammarAccess.getInsertMedicalRecordAccess().getDescriptionSTRINGTerminalRuleCall_14_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertMedicalRecordRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_14_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_15=')'
		{
			newLeafNode(otherlv_15, grammarAccess.getInsertMedicalRecordAccess().getRightParenthesisKeyword_15());
		}
		otherlv_16=';'
		{
			newLeafNode(otherlv_16, grammarAccess.getInsertMedicalRecordAccess().getSemicolonKeyword_16());
		}
	)
;

// Entry rule entryRuleInsertPatientMonitoring
entryRuleInsertPatientMonitoring returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertPatientMonitoringRule()); }
	iv_ruleInsertPatientMonitoring=ruleInsertPatientMonitoring
	{ $current=$iv_ruleInsertPatientMonitoring.current; }
	EOF;

// Rule InsertPatientMonitoring
ruleInsertPatientMonitoring returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PatientMonitoring'
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertPatientMonitoringAccess().getPatientMonitoringKeyword_0());
		}
		otherlv_1='Values('
		{
			newLeafNode(otherlv_1, grammarAccess.getInsertPatientMonitoringAccess().getValuesKeyword_1());
		}
		(
			(
				lv_monitoringId_2_0=RULE_INT
				{
					newLeafNode(lv_monitoringId_2_0, grammarAccess.getInsertPatientMonitoringAccess().getMonitoringIdINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertPatientMonitoringRule());
					}
					setWithLastConsumed(
						$current,
						"monitoringId",
						lv_monitoringId_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getInsertPatientMonitoringAccess().getCommaKeyword_3());
		}
		(
			(
				lv_patientId_4_0=RULE_INT
				{
					newLeafNode(lv_patientId_4_0, grammarAccess.getInsertPatientMonitoringAccess().getPatientIdINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertPatientMonitoringRule());
					}
					setWithLastConsumed(
						$current,
						"patientId",
						lv_patientId_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getInsertPatientMonitoringAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertPatientMonitoringAccess().getCategoryMedicalConditionEnumRuleCall_6_0());
				}
				lv_category_6_0=ruleMedicalCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertPatientMonitoringRule());
					}
					set(
						$current,
						"category",
						lv_category_6_0,
						"ase.QueryDsl.MedicalCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getInsertPatientMonitoringAccess().getCommaKeyword_7());
		}
		(
			(
				lv_date_8_0=RULE_DATE
				{
					newLeafNode(lv_date_8_0, grammarAccess.getInsertPatientMonitoringAccess().getDateDATETerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertPatientMonitoringRule());
					}
					setWithLastConsumed(
						$current,
						"date",
						lv_date_8_0,
						"ase.QueryDsl.DATE");
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getInsertPatientMonitoringAccess().getCommaKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertPatientMonitoringAccess().getRiskPerceptionRiskPerceptionEnumRuleCall_10_0());
				}
				lv_riskPerception_10_0=ruleRiskPerception
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertPatientMonitoringRule());
					}
					set(
						$current,
						"riskPerception",
						lv_riskPerception_10_0,
						"ase.QueryDsl.RiskPerception");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=','
		{
			newLeafNode(otherlv_11, grammarAccess.getInsertPatientMonitoringAccess().getCommaKeyword_11());
		}
		(
			(
				lv_treadted_12_0=RULE_BOOLEAN
				{
					newLeafNode(lv_treadted_12_0, grammarAccess.getInsertPatientMonitoringAccess().getTreadtedBOOLEANTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertPatientMonitoringRule());
					}
					setWithLastConsumed(
						$current,
						"treadted",
						lv_treadted_12_0,
						"ase.QueryDsl.BOOLEAN");
				}
			)
		)
		otherlv_13=','
		{
			newLeafNode(otherlv_13, grammarAccess.getInsertPatientMonitoringAccess().getCommaKeyword_13());
		}
		(
			(
				lv_deviceId_14_0=RULE_INT
				{
					newLeafNode(lv_deviceId_14_0, grammarAccess.getInsertPatientMonitoringAccess().getDeviceIdINTTerminalRuleCall_14_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertPatientMonitoringRule());
					}
					setWithLastConsumed(
						$current,
						"deviceId",
						lv_deviceId_14_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_15=')'
		{
			newLeafNode(otherlv_15, grammarAccess.getInsertPatientMonitoringAccess().getRightParenthesisKeyword_15());
		}
		otherlv_16=';'
		{
			newLeafNode(otherlv_16, grammarAccess.getInsertPatientMonitoringAccess().getSemicolonKeyword_16());
		}
	)
;

// Entry rule entryRuleInsertPrescription
entryRuleInsertPrescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertPrescriptionRule()); }
	iv_ruleInsertPrescription=ruleInsertPrescription
	{ $current=$iv_ruleInsertPrescription.current; }
	EOF;

// Rule InsertPrescription
ruleInsertPrescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Prescription'
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertPrescriptionAccess().getPrescriptionKeyword_0());
		}
		otherlv_1='Values('
		{
			newLeafNode(otherlv_1, grammarAccess.getInsertPrescriptionAccess().getValuesKeyword_1());
		}
		(
			(
				lv_prescriptionId_2_0=RULE_INT
				{
					newLeafNode(lv_prescriptionId_2_0, grammarAccess.getInsertPrescriptionAccess().getPrescriptionIdINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertPrescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"prescriptionId",
						lv_prescriptionId_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getInsertPrescriptionAccess().getCommaKeyword_3());
		}
		(
			(
				lv_recordId_4_0=RULE_INT
				{
					newLeafNode(lv_recordId_4_0, grammarAccess.getInsertPrescriptionAccess().getRecordIdINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertPrescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"recordId",
						lv_recordId_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getInsertPrescriptionAccess().getCommaKeyword_5());
		}
		(
			(
				lv_medicationName_6_0=RULE_STRING
				{
					newLeafNode(lv_medicationName_6_0, grammarAccess.getInsertPrescriptionAccess().getMedicationNameSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertPrescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"medicationName",
						lv_medicationName_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getInsertPrescriptionAccess().getCommaKeyword_7());
		}
		(
			(
				lv_start_8_0=RULE_DATE
				{
					newLeafNode(lv_start_8_0, grammarAccess.getInsertPrescriptionAccess().getStartDATETerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertPrescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"start",
						lv_start_8_0,
						"ase.QueryDsl.DATE");
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getInsertPrescriptionAccess().getCommaKeyword_9());
		}
		(
			(
				lv_end_10_0=RULE_DATE
				{
					newLeafNode(lv_end_10_0, grammarAccess.getInsertPrescriptionAccess().getEndDATETerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertPrescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"end",
						lv_end_10_0,
						"ase.QueryDsl.DATE");
				}
			)
		)
		otherlv_11=','
		{
			newLeafNode(otherlv_11, grammarAccess.getInsertPrescriptionAccess().getCommaKeyword_11());
		}
		(
			(
				lv_ordered_12_0=RULE_BOOLEAN
				{
					newLeafNode(lv_ordered_12_0, grammarAccess.getInsertPrescriptionAccess().getOrderedBOOLEANTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertPrescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"ordered",
						lv_ordered_12_0,
						"ase.QueryDsl.BOOLEAN");
				}
			)
		)
		otherlv_13=','
		{
			newLeafNode(otherlv_13, grammarAccess.getInsertPrescriptionAccess().getCommaKeyword_13());
		}
		(
			(
				lv_price_14_0=RULE_DOUBLE
				{
					newLeafNode(lv_price_14_0, grammarAccess.getInsertPrescriptionAccess().getPriceDOUBLETerminalRuleCall_14_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertPrescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"price",
						lv_price_14_0,
						"ase.QueryDsl.DOUBLE");
				}
			)
		)
		otherlv_15=')'
		{
			newLeafNode(otherlv_15, grammarAccess.getInsertPrescriptionAccess().getRightParenthesisKeyword_15());
		}
		otherlv_16=';'
		{
			newLeafNode(otherlv_16, grammarAccess.getInsertPrescriptionAccess().getSemicolonKeyword_16());
		}
	)
;

// Entry rule entryRuleDrop
entryRuleDrop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropRule()); }
	iv_ruleDrop=ruleDrop
	{ $current=$iv_ruleDrop.current; }
	EOF;

// Rule Drop
ruleDrop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DROP'
		{
			newLeafNode(otherlv_0, grammarAccess.getDropAccess().getDROPKeyword_0());
		}
		otherlv_1='TABLE'
		{
			newLeafNode(otherlv_1, grammarAccess.getDropAccess().getTABLEKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDropAccess().getTable_nameTableNameEnumRuleCall_2_0());
				}
				lv_table_name_2_0=ruleTableName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDropRule());
					}
					add(
						$current,
						"table_name",
						lv_table_name_2_0,
						"ase.QueryDsl.TableName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getDropAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleDelete
entryRuleDelete returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteRule()); }
	iv_ruleDelete=ruleDelete
	{ $current=$iv_ruleDelete.current; }
	EOF;

// Rule Delete
ruleDelete returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DELETE'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeleteAccess().getDELETEKeyword_0());
		}
		otherlv_1='FROM'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeleteAccess().getFROMKeyword_1());
		}
		(
			{
				newCompositeNode(grammarAccess.getDeleteAccess().getDeleteMedicalRecordParserRuleCall_2_0());
			}
			this_DeleteMedicalRecord_2=ruleDeleteMedicalRecord
			{
				$current = $this_DeleteMedicalRecord_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getDeleteAccess().getDeletePatientMonitoringParserRuleCall_2_1());
			}
			this_DeletePatientMonitoring_3=ruleDeletePatientMonitoring
			{
				$current = $this_DeletePatientMonitoring_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getDeleteAccess().getDeletePrescriptionParserRuleCall_2_2());
			}
			this_DeletePrescription_4=ruleDeletePrescription
			{
				$current = $this_DeletePrescription_4.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDeleteMedicalRecord
entryRuleDeleteMedicalRecord returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteMedicalRecordRule()); }
	iv_ruleDeleteMedicalRecord=ruleDeleteMedicalRecord
	{ $current=$iv_ruleDeleteMedicalRecord.current; }
	EOF;

// Rule DeleteMedicalRecord
ruleDeleteMedicalRecord returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MedicalRecord'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeleteMedicalRecordAccess().getMedicalRecordKeyword_0());
		}
		otherlv_1='WHERE'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeleteMedicalRecordAccess().getWHEREKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteMedicalRecordAccess().getWhereMedicalRecordWhereMedicalRecordParserRuleCall_2_0());
				}
				lv_whereMedicalRecord_2_0=ruleWhereMedicalRecord
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteMedicalRecordRule());
					}
					add(
						$current,
						"whereMedicalRecord",
						lv_whereMedicalRecord_2_0,
						"ase.QueryDsl.WhereMedicalRecord");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getDeleteMedicalRecordAccess().getAndKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeleteMedicalRecordAccess().getWhereMedicalRecordWhereMedicalRecordParserRuleCall_3_1_0());
					}
					lv_whereMedicalRecord_4_0=ruleWhereMedicalRecord
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeleteMedicalRecordRule());
						}
						add(
							$current,
							"whereMedicalRecord",
							lv_whereMedicalRecord_4_0,
							"ase.QueryDsl.WhereMedicalRecord");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getDeleteMedicalRecordAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleDeletePatientMonitoring
entryRuleDeletePatientMonitoring returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeletePatientMonitoringRule()); }
	iv_ruleDeletePatientMonitoring=ruleDeletePatientMonitoring
	{ $current=$iv_ruleDeletePatientMonitoring.current; }
	EOF;

// Rule DeletePatientMonitoring
ruleDeletePatientMonitoring returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PatientMonitoring'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeletePatientMonitoringAccess().getPatientMonitoringKeyword_0());
		}
		otherlv_1='WHERE'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeletePatientMonitoringAccess().getWHEREKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeletePatientMonitoringAccess().getWherepatientMonitoringWherePatientMonitoringParserRuleCall_2_0());
				}
				lv_wherepatientMonitoring_2_0=ruleWherePatientMonitoring
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeletePatientMonitoringRule());
					}
					add(
						$current,
						"wherepatientMonitoring",
						lv_wherepatientMonitoring_2_0,
						"ase.QueryDsl.WherePatientMonitoring");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getDeletePatientMonitoringAccess().getAndKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeletePatientMonitoringAccess().getWherepatientMonitoringWherePatientMonitoringParserRuleCall_3_1_0());
					}
					lv_wherepatientMonitoring_4_0=ruleWherePatientMonitoring
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeletePatientMonitoringRule());
						}
						add(
							$current,
							"wherepatientMonitoring",
							lv_wherepatientMonitoring_4_0,
							"ase.QueryDsl.WherePatientMonitoring");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getDeletePatientMonitoringAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleDeletePrescription
entryRuleDeletePrescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeletePrescriptionRule()); }
	iv_ruleDeletePrescription=ruleDeletePrescription
	{ $current=$iv_ruleDeletePrescription.current; }
	EOF;

// Rule DeletePrescription
ruleDeletePrescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Prescription'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeletePrescriptionAccess().getPrescriptionKeyword_0());
		}
		otherlv_1='WHERE'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeletePrescriptionAccess().getWHEREKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeletePrescriptionAccess().getWhereprescriptionWherePrescriptionParserRuleCall_2_0());
				}
				lv_whereprescription_2_0=ruleWherePrescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeletePrescriptionRule());
					}
					add(
						$current,
						"whereprescription",
						lv_whereprescription_2_0,
						"ase.QueryDsl.WherePrescription");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getDeletePrescriptionAccess().getAndKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeletePrescriptionAccess().getWhereprescriptionWherePrescriptionParserRuleCall_3_1_0());
					}
					lv_whereprescription_4_0=ruleWherePrescription
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeletePrescriptionRule());
						}
						add(
							$current,
							"whereprescription",
							lv_whereprescription_4_0,
							"ase.QueryDsl.WherePrescription");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getDeletePrescriptionAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleWhereMedicalRecord
entryRuleWhereMedicalRecord returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhereMedicalRecordRule()); }
	iv_ruleWhereMedicalRecord=ruleWhereMedicalRecord
	{ $current=$iv_ruleWhereMedicalRecord.current; }
	EOF;

// Rule WhereMedicalRecord
ruleWhereMedicalRecord returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='recordId'
			{
				newLeafNode(otherlv_0, grammarAccess.getWhereMedicalRecordAccess().getRecordIdKeyword_0_0());
			}
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getWhereMedicalRecordAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					lv_recordId_2_0=RULE_INT
					{
						newLeafNode(lv_recordId_2_0, grammarAccess.getWhereMedicalRecordAccess().getRecordIdINTTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWhereMedicalRecordRule());
						}
						addWithLastConsumed(
							$current,
							"recordId",
							lv_recordId_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_3='patientId'
			{
				newLeafNode(otherlv_3, grammarAccess.getWhereMedicalRecordAccess().getPatientIdKeyword_1_0());
			}
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getWhereMedicalRecordAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					lv_patientId_5_0=RULE_INT
					{
						newLeafNode(lv_patientId_5_0, grammarAccess.getWhereMedicalRecordAccess().getPatientIdINTTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWhereMedicalRecordRule());
						}
						addWithLastConsumed(
							$current,
							"patientId",
							lv_patientId_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_6='doctorId'
			{
				newLeafNode(otherlv_6, grammarAccess.getWhereMedicalRecordAccess().getDoctorIdKeyword_2_0());
			}
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getWhereMedicalRecordAccess().getEqualsSignKeyword_2_1());
			}
			(
				(
					lv_doctorId_8_0=RULE_INT
					{
						newLeafNode(lv_doctorId_8_0, grammarAccess.getWhereMedicalRecordAccess().getDoctorIdINTTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWhereMedicalRecordRule());
						}
						addWithLastConsumed(
							$current,
							"doctorId",
							lv_doctorId_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_9='medicalCondition'
			{
				newLeafNode(otherlv_9, grammarAccess.getWhereMedicalRecordAccess().getMedicalConditionKeyword_3_0());
			}
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getWhereMedicalRecordAccess().getEqualsSignKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWhereMedicalRecordAccess().getMedicalConditionMedicalConditionEnumRuleCall_3_2_0());
					}
					lv_medicalCondition_11_0=ruleMedicalCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWhereMedicalRecordRule());
						}
						add(
							$current,
							"medicalCondition",
							lv_medicalCondition_11_0,
							"ase.QueryDsl.MedicalCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_12='date'
			{
				newLeafNode(otherlv_12, grammarAccess.getWhereMedicalRecordAccess().getDateKeyword_4_0());
			}
			otherlv_13='='
			{
				newLeafNode(otherlv_13, grammarAccess.getWhereMedicalRecordAccess().getEqualsSignKeyword_4_1());
			}
			(
				(
					lv_date_14_0=RULE_DATE
					{
						newLeafNode(lv_date_14_0, grammarAccess.getWhereMedicalRecordAccess().getDateDATETerminalRuleCall_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWhereMedicalRecordRule());
						}
						addWithLastConsumed(
							$current,
							"date",
							lv_date_14_0,
							"ase.QueryDsl.DATE");
					}
				)
			)
		)
		    |
		(
			otherlv_15='price'
			{
				newLeafNode(otherlv_15, grammarAccess.getWhereMedicalRecordAccess().getPriceKeyword_5_0());
			}
			otherlv_16='='
			{
				newLeafNode(otherlv_16, grammarAccess.getWhereMedicalRecordAccess().getEqualsSignKeyword_5_1());
			}
			(
				(
					lv_price_17_0=RULE_DOUBLE
					{
						newLeafNode(lv_price_17_0, grammarAccess.getWhereMedicalRecordAccess().getPriceDOUBLETerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWhereMedicalRecordRule());
						}
						addWithLastConsumed(
							$current,
							"price",
							lv_price_17_0,
							"ase.QueryDsl.DOUBLE");
					}
				)
			)
		)
		    |
		(
			otherlv_18='description'
			{
				newLeafNode(otherlv_18, grammarAccess.getWhereMedicalRecordAccess().getDescriptionKeyword_6_0());
			}
			otherlv_19='='
			{
				newLeafNode(otherlv_19, grammarAccess.getWhereMedicalRecordAccess().getEqualsSignKeyword_6_1());
			}
			(
				(
					lv_description_20_0=RULE_STRING
					{
						newLeafNode(lv_description_20_0, grammarAccess.getWhereMedicalRecordAccess().getDescriptionSTRINGTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWhereMedicalRecordRule());
						}
						addWithLastConsumed(
							$current,
							"description",
							lv_description_20_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleWherePatientMonitoring
entryRuleWherePatientMonitoring returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWherePatientMonitoringRule()); }
	iv_ruleWherePatientMonitoring=ruleWherePatientMonitoring
	{ $current=$iv_ruleWherePatientMonitoring.current; }
	EOF;

// Rule WherePatientMonitoring
ruleWherePatientMonitoring returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='monitoringId'
			{
				newLeafNode(otherlv_0, grammarAccess.getWherePatientMonitoringAccess().getMonitoringIdKeyword_0_0());
			}
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getWherePatientMonitoringAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					lv_monitoringId_2_0=RULE_INT
					{
						newLeafNode(lv_monitoringId_2_0, grammarAccess.getWherePatientMonitoringAccess().getMonitoringIdINTTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWherePatientMonitoringRule());
						}
						addWithLastConsumed(
							$current,
							"monitoringId",
							lv_monitoringId_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_3='patientId'
			{
				newLeafNode(otherlv_3, grammarAccess.getWherePatientMonitoringAccess().getPatientIdKeyword_1_0());
			}
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getWherePatientMonitoringAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					lv_patientId_5_0=RULE_INT
					{
						newLeafNode(lv_patientId_5_0, grammarAccess.getWherePatientMonitoringAccess().getPatientIdINTTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWherePatientMonitoringRule());
						}
						addWithLastConsumed(
							$current,
							"patientId",
							lv_patientId_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_6='category'
			{
				newLeafNode(otherlv_6, grammarAccess.getWherePatientMonitoringAccess().getCategoryKeyword_2_0());
			}
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getWherePatientMonitoringAccess().getEqualsSignKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWherePatientMonitoringAccess().getCategoryMedicalConditionEnumRuleCall_2_2_0());
					}
					lv_category_8_0=ruleMedicalCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWherePatientMonitoringRule());
						}
						add(
							$current,
							"category",
							lv_category_8_0,
							"ase.QueryDsl.MedicalCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_9='date'
			{
				newLeafNode(otherlv_9, grammarAccess.getWherePatientMonitoringAccess().getDateKeyword_3_0());
			}
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getWherePatientMonitoringAccess().getEqualsSignKeyword_3_1());
			}
			(
				(
					lv_date_11_0=RULE_DATE
					{
						newLeafNode(lv_date_11_0, grammarAccess.getWherePatientMonitoringAccess().getDateDATETerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWherePatientMonitoringRule());
						}
						addWithLastConsumed(
							$current,
							"date",
							lv_date_11_0,
							"ase.QueryDsl.DATE");
					}
				)
			)
		)
		    |
		(
			otherlv_12='riskPerception'
			{
				newLeafNode(otherlv_12, grammarAccess.getWherePatientMonitoringAccess().getRiskPerceptionKeyword_4_0());
			}
			otherlv_13='='
			{
				newLeafNode(otherlv_13, grammarAccess.getWherePatientMonitoringAccess().getEqualsSignKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWherePatientMonitoringAccess().getRiskperceptionRiskPerceptionEnumRuleCall_4_2_0());
					}
					lv_riskperception_14_0=ruleRiskPerception
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWherePatientMonitoringRule());
						}
						add(
							$current,
							"riskperception",
							lv_riskperception_14_0,
							"ase.QueryDsl.RiskPerception");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_15='treated'
			{
				newLeafNode(otherlv_15, grammarAccess.getWherePatientMonitoringAccess().getTreatedKeyword_5_0());
			}
			otherlv_16='='
			{
				newLeafNode(otherlv_16, grammarAccess.getWherePatientMonitoringAccess().getEqualsSignKeyword_5_1());
			}
			(
				(
					lv_treated_17_0=RULE_BOOLEAN
					{
						newLeafNode(lv_treated_17_0, grammarAccess.getWherePatientMonitoringAccess().getTreatedBOOLEANTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWherePatientMonitoringRule());
						}
						addWithLastConsumed(
							$current,
							"treated",
							lv_treated_17_0,
							"ase.QueryDsl.BOOLEAN");
					}
				)
			)
		)
		    |
		(
			otherlv_18='deviceId'
			{
				newLeafNode(otherlv_18, grammarAccess.getWherePatientMonitoringAccess().getDeviceIdKeyword_6_0());
			}
			otherlv_19='='
			{
				newLeafNode(otherlv_19, grammarAccess.getWherePatientMonitoringAccess().getEqualsSignKeyword_6_1());
			}
			(
				(
					lv_deviceId_20_0=RULE_INT
					{
						newLeafNode(lv_deviceId_20_0, grammarAccess.getWherePatientMonitoringAccess().getDeviceIdINTTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWherePatientMonitoringRule());
						}
						addWithLastConsumed(
							$current,
							"deviceId",
							lv_deviceId_20_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleWherePrescription
entryRuleWherePrescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWherePrescriptionRule()); }
	iv_ruleWherePrescription=ruleWherePrescription
	{ $current=$iv_ruleWherePrescription.current; }
	EOF;

// Rule WherePrescription
ruleWherePrescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='prescriptionId'
			{
				newLeafNode(otherlv_0, grammarAccess.getWherePrescriptionAccess().getPrescriptionIdKeyword_0_0());
			}
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getWherePrescriptionAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					lv_prescriptionId_2_0=RULE_INT
					{
						newLeafNode(lv_prescriptionId_2_0, grammarAccess.getWherePrescriptionAccess().getPrescriptionIdINTTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWherePrescriptionRule());
						}
						addWithLastConsumed(
							$current,
							"prescriptionId",
							lv_prescriptionId_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_3='recordId'
			{
				newLeafNode(otherlv_3, grammarAccess.getWherePrescriptionAccess().getRecordIdKeyword_1_0());
			}
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getWherePrescriptionAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					lv_recordId_5_0=RULE_INT
					{
						newLeafNode(lv_recordId_5_0, grammarAccess.getWherePrescriptionAccess().getRecordIdINTTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWherePrescriptionRule());
						}
						addWithLastConsumed(
							$current,
							"recordId",
							lv_recordId_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_6='medicationName'
			{
				newLeafNode(otherlv_6, grammarAccess.getWherePrescriptionAccess().getMedicationNameKeyword_2_0());
			}
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getWherePrescriptionAccess().getEqualsSignKeyword_2_1());
			}
			(
				(
					lv_medicationName_8_0=RULE_STRING
					{
						newLeafNode(lv_medicationName_8_0, grammarAccess.getWherePrescriptionAccess().getMedicationNameSTRINGTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWherePrescriptionRule());
						}
						addWithLastConsumed(
							$current,
							"medicationName",
							lv_medicationName_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			otherlv_9='start'
			{
				newLeafNode(otherlv_9, grammarAccess.getWherePrescriptionAccess().getStartKeyword_3_0());
			}
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getWherePrescriptionAccess().getEqualsSignKeyword_3_1());
			}
			(
				(
					lv_start_11_0=RULE_DATE
					{
						newLeafNode(lv_start_11_0, grammarAccess.getWherePrescriptionAccess().getStartDATETerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWherePrescriptionRule());
						}
						addWithLastConsumed(
							$current,
							"start",
							lv_start_11_0,
							"ase.QueryDsl.DATE");
					}
				)
			)
		)
		    |
		(
			otherlv_12='end'
			{
				newLeafNode(otherlv_12, grammarAccess.getWherePrescriptionAccess().getEndKeyword_4_0());
			}
			otherlv_13='='
			{
				newLeafNode(otherlv_13, grammarAccess.getWherePrescriptionAccess().getEqualsSignKeyword_4_1());
			}
			(
				(
					lv_end_14_0=RULE_DATE
					{
						newLeafNode(lv_end_14_0, grammarAccess.getWherePrescriptionAccess().getEndDATETerminalRuleCall_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWherePrescriptionRule());
						}
						addWithLastConsumed(
							$current,
							"end",
							lv_end_14_0,
							"ase.QueryDsl.DATE");
					}
				)
			)
		)
		    |
		(
			otherlv_15='ordered'
			{
				newLeafNode(otherlv_15, grammarAccess.getWherePrescriptionAccess().getOrderedKeyword_5_0());
			}
			otherlv_16='='
			{
				newLeafNode(otherlv_16, grammarAccess.getWherePrescriptionAccess().getEqualsSignKeyword_5_1());
			}
			(
				(
					lv_ordered_17_0=RULE_BOOLEAN
					{
						newLeafNode(lv_ordered_17_0, grammarAccess.getWherePrescriptionAccess().getOrderedBOOLEANTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWherePrescriptionRule());
						}
						addWithLastConsumed(
							$current,
							"ordered",
							lv_ordered_17_0,
							"ase.QueryDsl.BOOLEAN");
					}
				)
			)
		)
		    |
		(
			otherlv_18='price'
			{
				newLeafNode(otherlv_18, grammarAccess.getWherePrescriptionAccess().getPriceKeyword_6_0());
			}
			otherlv_19='='
			{
				newLeafNode(otherlv_19, grammarAccess.getWherePrescriptionAccess().getEqualsSignKeyword_6_1());
			}
			(
				(
					lv_price_20_0=RULE_DOUBLE
					{
						newLeafNode(lv_price_20_0, grammarAccess.getWherePrescriptionAccess().getPriceDOUBLETerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWherePrescriptionRule());
						}
						addWithLastConsumed(
							$current,
							"price",
							lv_price_20_0,
							"ase.QueryDsl.DOUBLE");
					}
				)
			)
		)
	)
;

// Rule TableName
ruleTableName returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='MedicalRecord'
			{
				$current = grammarAccess.getTableNameAccess().getMedicalRecordEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTableNameAccess().getMedicalRecordEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='PatientMonitoring'
			{
				$current = grammarAccess.getTableNameAccess().getPatientMonitoringEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTableNameAccess().getPatientMonitoringEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Prescription'
			{
				$current = grammarAccess.getTableNameAccess().getPrescriptionEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTableNameAccess().getPrescriptionEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule VariableMedicalRecord
ruleVariableMedicalRecord returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='recordId'
			{
				$current = grammarAccess.getVariableMedicalRecordAccess().getRecordIdEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVariableMedicalRecordAccess().getRecordIdEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='patientId'
			{
				$current = grammarAccess.getVariableMedicalRecordAccess().getPatientIdEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVariableMedicalRecordAccess().getPatientIdEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='doctorId'
			{
				$current = grammarAccess.getVariableMedicalRecordAccess().getDoctorIdEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVariableMedicalRecordAccess().getDoctorIdEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='medicalCondition'
			{
				$current = grammarAccess.getVariableMedicalRecordAccess().getMedicalConditionEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getVariableMedicalRecordAccess().getMedicalConditionEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='date'
			{
				$current = grammarAccess.getVariableMedicalRecordAccess().getDateEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getVariableMedicalRecordAccess().getDateEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='price'
			{
				$current = grammarAccess.getVariableMedicalRecordAccess().getPriceEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getVariableMedicalRecordAccess().getPriceEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='description'
			{
				$current = grammarAccess.getVariableMedicalRecordAccess().getDescriptionEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getVariableMedicalRecordAccess().getDescriptionEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule VariablePatientMonitoring
ruleVariablePatientMonitoring returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='monitoringId'
			{
				$current = grammarAccess.getVariablePatientMonitoringAccess().getMonitoringIdEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVariablePatientMonitoringAccess().getMonitoringIdEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='patientId'
			{
				$current = grammarAccess.getVariablePatientMonitoringAccess().getPatientIdEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVariablePatientMonitoringAccess().getPatientIdEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='category'
			{
				$current = grammarAccess.getVariablePatientMonitoringAccess().getCategoryEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVariablePatientMonitoringAccess().getCategoryEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='date'
			{
				$current = grammarAccess.getVariablePatientMonitoringAccess().getDateEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getVariablePatientMonitoringAccess().getDateEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='riskPerception'
			{
				$current = grammarAccess.getVariablePatientMonitoringAccess().getRiskPerceptionEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getVariablePatientMonitoringAccess().getRiskPerceptionEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='treated'
			{
				$current = grammarAccess.getVariablePatientMonitoringAccess().getTreatedEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getVariablePatientMonitoringAccess().getTreatedEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='deviceId'
			{
				$current = grammarAccess.getVariablePatientMonitoringAccess().getDeviceIdEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getVariablePatientMonitoringAccess().getDeviceIdEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule VariablePrescription
ruleVariablePrescription returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='prescriptionId'
			{
				$current = grammarAccess.getVariablePrescriptionAccess().getPrescriptionIdEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVariablePrescriptionAccess().getPrescriptionIdEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='recordId'
			{
				$current = grammarAccess.getVariablePrescriptionAccess().getRecordIdEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVariablePrescriptionAccess().getRecordIdEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='medicationName'
			{
				$current = grammarAccess.getVariablePrescriptionAccess().getMedicationNameEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVariablePrescriptionAccess().getMedicationNameEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='start'
			{
				$current = grammarAccess.getVariablePrescriptionAccess().getStartEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getVariablePrescriptionAccess().getStartEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='end'
			{
				$current = grammarAccess.getVariablePrescriptionAccess().getEndEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getVariablePrescriptionAccess().getEndEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='ordered'
			{
				$current = grammarAccess.getVariablePrescriptionAccess().getOrderedEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getVariablePrescriptionAccess().getOrderedEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='price'
			{
				$current = grammarAccess.getVariablePrescriptionAccess().getPriceEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getVariablePrescriptionAccess().getPriceEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule MedicalCondition
ruleMedicalCondition returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Bronchitis'
			{
				$current = grammarAccess.getMedicalConditionAccess().getBronchitisEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMedicalConditionAccess().getBronchitisEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Asthma'
			{
				$current = grammarAccess.getMedicalConditionAccess().getAsthmaEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMedicalConditionAccess().getAsthmaEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Diabetes'
			{
				$current = grammarAccess.getMedicalConditionAccess().getDiabetesEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMedicalConditionAccess().getDiabetesEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Flu'
			{
				$current = grammarAccess.getMedicalConditionAccess().getFluEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getMedicalConditionAccess().getFluEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Hypertension'
			{
				$current = grammarAccess.getMedicalConditionAccess().getHypertensionEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getMedicalConditionAccess().getHypertensionEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule RiskPerception
ruleRiskPerception returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='High'
			{
				$current = grammarAccess.getRiskPerceptionAccess().getHighEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRiskPerceptionAccess().getHighEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Medium'
			{
				$current = grammarAccess.getRiskPerceptionAccess().getMediumEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRiskPerceptionAccess().getMediumEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Low'
			{
				$current = grammarAccess.getRiskPerceptionAccess().getLowEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRiskPerceptionAccess().getLowEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_DATE : RULE_DAY '.' RULE_MONTH '.' RULE_YEAR;

fragment RULE_DAY : ('1'..'9'|'1'..'3' '0'..'9');

fragment RULE_MONTH : ('Jan'|'Feb'|'Mar'|'Apr'|'May'|'Jun'|'Jul'|'Aug'|'Sep'|'Oct'|'Nov'|'Dec');

fragment RULE_YEAR : '0'..'2' '0'..'9' '0'..'9' '0'..'9';

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
